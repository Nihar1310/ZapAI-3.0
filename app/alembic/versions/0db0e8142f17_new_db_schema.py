"""A basic migration script."""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0db0e8142f17'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_usage',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('endpoint', sa.String(length=200), nullable=True),
    sa.Column('requests_count', sa.Integer(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('response_status', sa.String(length=50), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_usage_created_at'), 'api_usage', ['created_at'], unique=False)
    op.create_index(op.f('ix_api_usage_date'), 'api_usage', ['date'], unique=False)
    op.create_index(op.f('ix_api_usage_service_name'), 'api_usage', ['service_name'], unique=False)
    op.create_table('cost_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('cost_type', sa.String(length=50), nullable=False),
    sa.Column('cost_amount', sa.Float(), nullable=False),
    sa.Column('requests_count', sa.Integer(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('query_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cost_metrics_created_at'), 'cost_metrics', ['created_at'], unique=False)
    op.create_index(op.f('ix_cost_metrics_date'), 'cost_metrics', ['date'], unique=False)
    op.create_index(op.f('ix_cost_metrics_service_name'), 'cost_metrics', ['service_name'], unique=False)
    op.create_table('error_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('error_type', sa.String(length=100), nullable=False),
    sa.Column('error_message', sa.String(length=1000), nullable=False),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('service', sa.String(length=100), nullable=True),
    sa.Column('endpoint', sa.String(length=200), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('stack_trace', sa.String(length=5000), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_error_logs_created_at'), 'error_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_error_logs_error_type'), 'error_logs', ['error_type'], unique=False)
    op.create_index(op.f('ix_error_logs_service'), 'error_logs', ['service'], unique=False)
    op.create_table('performance_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('endpoint', sa.String(length=200), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('response_time', sa.Float(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('memory_usage', sa.Float(), nullable=True),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('request_size', sa.Integer(), nullable=True),
    sa.Column('response_size', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_metrics_endpoint'), 'performance_metrics', ['endpoint'], unique=False)
    op.create_index(op.f('ix_performance_metrics_timestamp'), 'performance_metrics', ['timestamp'], unique=False)
    op.create_table('search_analytics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('hour', sa.Integer(), nullable=True),
    sa.Column('total_searches', sa.Integer(), nullable=True),
    sa.Column('successful_searches', sa.Integer(), nullable=True),
    sa.Column('failed_searches', sa.Integer(), nullable=True),
    sa.Column('google_requests', sa.Integer(), nullable=True),
    sa.Column('bing_requests', sa.Integer(), nullable=True),
    sa.Column('duckduckgo_requests', sa.Integer(), nullable=True),
    sa.Column('pages_scraped', sa.Integer(), nullable=True),
    sa.Column('scraping_success_rate', sa.Float(), nullable=True),
    sa.Column('ai_requests', sa.Integer(), nullable=True),
    sa.Column('ai_tokens_used', sa.Integer(), nullable=True),
    sa.Column('ai_processing_time', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('cost_per_search', sa.Float(), nullable=True),
    sa.Column('avg_response_time', sa.Float(), nullable=True),
    sa.Column('avg_results_per_search', sa.Float(), nullable=True),
    sa.Column('contacts_extracted', sa.Integer(), nullable=True),
    sa.Column('emails_found', sa.Integer(), nullable=True),
    sa.Column('phones_found', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_search_analytics_date'), 'search_analytics', ['date'], unique=False)
    op.create_table('search_cache',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cache_key', sa.String(length=255), nullable=False),
    sa.Column('query_hash', sa.String(length=64), nullable=False),
    sa.Column('cached_data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('hit_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_search_cache_cache_key'), 'search_cache', ['cache_key'], unique=True)
    op.create_index(op.f('ix_search_cache_expires_at'), 'search_cache', ['expires_at'], unique=False)
    op.create_index(op.f('ix_search_cache_query_hash'), 'search_cache', ['query_hash'], unique=False)
    op.create_table('system_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('labels', sa.JSON(), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_metrics_metric_name'), 'system_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_system_metrics_timestamp'), 'system_metrics', ['timestamp'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_session_token'), 'user_sessions', ['session_token'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('subscription_tier', sa.String(length=50), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_hour', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_day', sa.Integer(), nullable=True),
    sa.Column('total_queries', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_api_key'), 'users', ['api_key'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('search_queries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('query_text', sa.String(length=500), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('max_pages', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('preview', 'paid', 'enriching', 'ready', 'failed', name='searchstatus'), nullable=False),
    sa.Column('firecrawl_raw', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('total_results', sa.Integer(), nullable=True),
    sa.Column('pages_processed', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('cost_breakdown', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_search_queries_created_at'), 'search_queries', ['created_at'], unique=False)
    op.create_index(op.f('ix_search_queries_query_text'), 'search_queries', ['query_text'], unique=False)
    op.create_table('costs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('search_id', sa.Integer(), nullable=False),
    sa.Column('firecrawl_cost', sa.Float(), nullable=True),
    sa.Column('apollo_cost', sa.Float(), nullable=True),
    sa.Column('stripe_fee', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['search_id'], ['search_queries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_costs_id'), 'costs', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('search_id', sa.Integer(), nullable=False),
    sa.Column('stripe_session_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'paid', 'failed', name='paymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['search_id'], ['search_queries.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index(op.f('ix_payments_stripe_session_id'), 'payments', ['stripe_session_id'], unique=True)
    op.create_table('search_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('query_id', sa.UUID(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('snippet', sa.Text(), nullable=True),
    sa.Column('source_engines', postgresql.ARRAY(String()), nullable=True),
    sa.Column('rank_google', sa.Integer(), nullable=True),
    sa.Column('rank_bing', sa.Integer(), nullable=True),
    sa.Column('rank_duckduckgo', sa.Integer(), nullable=True),
    sa.Column('scraped_content', sa.Text(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(), nullable=True),
    sa.Column('scraping_success', sa.Boolean(), nullable=True),
    sa.Column('scraping_error', sa.Text(), nullable=True),
    sa.Column('ai_processed', sa.Boolean(), nullable=True),
    sa.Column('ai_processed_at', sa.DateTime(), nullable=True),
    sa.Column('ai_processing_cost', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['query_id'], ['search_queries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_search_results_url'), 'search_results', ['url'], unique=False)
    op.create_table('contact_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('result_id', sa.UUID(), nullable=False),
    sa.Column('emails', postgresql.ARRAY(String()), nullable=True),
    sa.Column('phone_numbers', postgresql.ARRAY(String()), nullable=True),
    sa.Column('names', postgresql.ARRAY(String()), nullable=True),
    sa.Column('job_titles', postgresql.ARRAY(String()), nullable=True),
    sa.Column('companies', postgresql.ARRAY(String()), nullable=True),
    sa.Column('social_profiles', sa.JSON(), nullable=True),
    sa.Column('extraction_method', sa.String(length=50), nullable=True),
    sa.Column('extraction_confidence', sa.Float(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.Column('emails_validated', sa.Boolean(), nullable=True),
    sa.Column('phones_validated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['result_id'], ['search_results.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('result_id', sa.UUID(), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('full_address', sa.Text(), nullable=True),
    sa.Column('street_address', sa.String(length=200), nullable=True),
    sa.Column('extraction_confidence', sa.Float(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['result_id'], ['search_results.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_data_city'), 'location_data', ['city'], unique=False)
    op.create_index(op.f('ix_location_data_country'), 'location_data', ['country'], unique=False)
    op.create_index(op.f('ix_location_data_state'), 'location_data', ['state'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_location_data_state'), table_name='location_data')
    op.drop_index(op.f('ix_location_data_country'), table_name='location_data')
    op.drop_index(op.f('ix_location_data_city'), table_name='location_data')
    op.drop_table('location_data')
    op.drop_table('contact_data')
    op.drop_index(op.f('ix_search_results_url'), table_name='search_results')
    op.drop_table('search_results')
    op.drop_index(op.f('ix_payments_stripe_session_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_costs_id'), table_name='costs')
    op.drop_table('costs')
    op.drop_index(op.f('ix_search_queries_query_text'), table_name='search_queries')
    op.drop_index(op.f('ix_search_queries_created_at'), table_name='search_queries')
    op.drop_table('search_queries')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_api_key'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_sessions_session_token'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_system_metrics_timestamp'), table_name='system_metrics')
    op.drop_index(op.f('ix_system_metrics_metric_name'), table_name='system_metrics')
    op.drop_table('system_metrics')
    op.drop_index(op.f('ix_search_cache_query_hash'), table_name='search_cache')
    op.drop_index(op.f('ix_search_cache_expires_at'), table_name='search_cache')
    op.drop_index(op.f('ix_search_cache_cache_key'), table_name='search_cache')
    op.drop_table('search_cache')
    op.drop_index(op.f('ix_search_analytics_date'), table_name='search_analytics')
    op.drop_table('search_analytics')
    op.drop_index(op.f('ix_performance_metrics_timestamp'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_endpoint'), table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index(op.f('ix_error_logs_service'), table_name='error_logs')
    op.drop_index(op.f('ix_error_logs_error_type'), table_name='error_logs')
    op.drop_index(op.f('ix_error_logs_created_at'), table_name='error_logs')
    op.drop_table('error_logs')
    op.drop_index(op.f('ix_cost_metrics_service_name'), table_name='cost_metrics')
    op.drop_index(op.f('ix_cost_metrics_date'), table_name='cost_metrics')
    op.drop_index(op.f('ix_cost_metrics_created_at'), table_name='cost_metrics')
    op.drop_table('cost_metrics')
    op.drop_index(op.f('ix_api_usage_service_name'), table_name='api_usage')
    op.drop_index(op.f('ix_api_usage_date'), table_name='api_usage')
    op.drop_index(op.f('ix_api_usage_created_at'), table_name='api_usage')
    op.drop_table('api_usage')
    # ### end Alembic commands ###
